/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int getLength(ListNode *node)
    {
        int len = 0;
        ListNode *h = node;
        while(h != NULL)
        {
            h = h->next;
            len++;
        }
        return len;
    }
    
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        
        int len1 = getLength(headA);
        int len2 = getLength(headB);
        ListNode *p1, *p2;
        p1 = headA;
        p2 = headB;
        if(len1 > len2)
        {
            while(len1 != len2)
            {
                p1 = p1->next;
                len1--;
            }
        }
        else if(len2 > len1)
        {
            while(len1 != len2)
            {
                p2 = p2->next;
                len2--;
            }
        }
        
        while(p1 != NULL && p2 != NULL){
            if(p1->val == p2->val){
                return p1;
            }else{
 
            }
            p1 = p1->next;
            p2 = p2->next;
        }
 
        return NULL;
        
        
    }
};