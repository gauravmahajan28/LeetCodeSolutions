/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> arr;
    int diff = INT_MAX;
    
    int getMinimumDifference(TreeNode* root) {
        
        if(root->right == NULL && root->left == NULL)
            return root->val;
        
        inorder(root, INT_MAX);
        
        for(int i = 0; i < arr.size(); i++)
        {
            if(i == 0)
                continue;
            else
                if(abs(arr[i] - arr[i-1]) < diff)
                    diff = abs(arr[i] - arr[i-1]);
        }
        
        return diff;
        
    }
    
    void inorder(TreeNode *root, int prev)
    {
        if(root)
        {
            inorder(root->left, root->val);
            arr.push_back(root->val);
            inorder(root->right, root->val);
            
        }
    }
};